=================================================================
==4111348==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000002d8 at pc 0x5561f818b0ca bp 0x7ffec06ac710 sp 0x7ffec06ac700
READ of size 8 at 0x6020000002d8 thread T0
    #0 0x5561f818b0c9 in std::__uniq_ptr_impl<LIEF::DEX::Method, std::default_delete<LIEF::DEX::Method> >::_M_ptr() const /usr/include/c++/9/bits/unique_ptr.h:154
    #1 0x5561f8171635 in std::unique_ptr<LIEF::DEX::Method, std::default_delete<LIEF::DEX::Method> >::get() const /usr/include/c++/9/bits/unique_ptr.h:361
    #2 0x5561f8171585 in std::unique_ptr<LIEF::DEX::Method, std::default_delete<LIEF::DEX::Method> >::operator->() const /usr/include/c++/9/bits/unique_ptr.h:355
    #3 0x5561f818d735 in void LIEF::DEX::Parser::parse_method<LIEF::DEX::details::DEX35>(unsigned long, LIEF::DEX::Class&, bool) (/home/chan/test/LIEF/fuzz/harness1+0x531735)
    #4 0x5561f8173d41 in void LIEF::DEX::Parser::parse_class_data<LIEF::DEX::details::DEX35>(unsigned int, LIEF::DEX::Class&) (/home/chan/test/LIEF/fuzz/harness1+0x517d41)
    #5 0x5561f8146371 in void LIEF::DEX::Parser::parse_classes<LIEF::DEX::details::DEX35>() /home/chan/test/LIEF/src/DEX/Parser.tcc:463
    #6 0x5561f8137431 in void LIEF::DEX::Parser::parse_file<LIEF::DEX::details::DEX35>() /home/chan/test/LIEF/src/DEX/Parser.tcc:45
    #7 0x5561f812d9fd in LIEF::DEX::Parser::init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) /home/chan/test/LIEF/src/DEX/Parser.cpp:78
    #8 0x5561f812cde7 in LIEF::DEX::Parser::parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/chan/test/LIEF/src/DEX/Parser.cpp:40
    #9 0x5561f7f9523c in main /home/chan/test/LIEF/fuzz/harness1.cpp:139
    #10 0x7fd3ebe7e082 in __libc_start_main ../csu/libc-start.c:308
    #11 0x5561f7f935dd in _start (/home/chan/test/LIEF/fuzz/harness1+0x3375dd)

0x6020000002d8 is located 0 bytes to the right of 8-byte region [0x6020000002d0,0x6020000002d8)
allocated by thread T0 here:
    #0 0x7fd3ec4a7587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104
    #1 0x5561f81cf226 in __gnu_cxx::new_allocator<std::unique_ptr<LIEF::DEX::Method, std::default_delete<LIEF::DEX::Method> > >::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114
    #2 0xfffd80d59ad  (<unknown module>)

SUMMARY: AddressSanitizer: heap-buffer-overflow /usr/include/c++/9/bits/unique_ptr.h:154 in std::__uniq_ptr_impl<LIEF::DEX::Method, std::default_delete<LIEF::DEX::Method> >::_M_ptr() const
Shadow bytes around the buggy address:
  0x0c047fff8000: fa fa 00 fa fa fa 00 fa fa fa 00 00 fa fa fd fa
  0x0c047fff8010: fa fa 00 00 fa fa 00 fa fa fa fd fa fa fa 00 fa
  0x0c047fff8020: fa fa 04 fa fa fa fd fa fa fa fd fd fa fa 04 fa
  0x0c047fff8030: fa fa fd fa fa fa fd fd fa fa fd fa fa fa 00 fa
  0x0c047fff8040: fa fa fd fd fa fa 00 fa fa fa 00 fa fa fa 00 fa
=>0x0c047fff8050: fa fa 00 fa fa fa 00 fa fa fa 00[fa]fa fa 00 fa
  0x0c047fff8060: fa fa fd fa fa fa 00 00 fa fa fa fa fa fa fa fa
  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==4111348==ABORTING